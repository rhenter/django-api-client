# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Rafael Henter
# This file is distributed under the same license as the Django API Client
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Django API Client 0.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-26 14:16-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/example.rst:2
msgid "Example"
msgstr ""

#: ../../source/example.rst:4
msgid "Add this settings in your project ``settings.py`` file to access your API"
msgstr ""

#: ../../source/example.rst:36
msgid ""
"The details of the configuration will be better explained in the "
"documentation"
msgstr ""

#: ../../source/example.rst:38
msgid ""
"Create a clients.py file in the core folder of your project, if you "
"haven't, created it within your project folder to be simple to be "
"imported from anywhere in the project with the following content:"
msgstr ""

#: ../../source/example.rst:48
msgid ""
"The name of this variable will be the name of the customer that you will "
"import into every project"
msgstr ""

#: ../../source/example.rst:49
msgid ""
"It is recommended that the name comes from a constant in the settings.py "
"file, and if possible it can even be an environment variable."
msgstr ""

#: ../../source/example.rst:50
msgid ""
"In our case, we have 2 options,\"production\" and \"localhost\", the "
"factory generates a `api client` according to the name used and the "
"parameters identified in it"
msgstr ""

#: ../../source/example.rst:53
msgid "Now we are going to list the data using the Django template system default"
msgstr ""

#: ../../source/example.rst:55
msgid ""
"Let's imagine which client has a project folder (folder containing the "
"settings.py file)"
msgstr ""

#: ../../source/example.rst:73
msgid ""
"The client will generate a user-friendly structure for each endpoint. "
"Example with the endpoint */order/orders/*:"
msgstr ""

#~ msgid "Also add the settings to access your API to settings.py:"
#~ msgstr ""

#~ msgid ""
#~ "Add this settings to access your "
#~ "API to in your project ``settings.py``"
#~ " file:"
#~ msgstr ""

#~ msgid ""
#~ "*Note: The details of the configuration"
#~ " will be better explained in the "
#~ "documentation*"
#~ msgstr ""

#~ msgid "Note:"
#~ msgstr ""

#~ msgid ""
#~ "The name of this variable will be"
#~ " the name of the client that "
#~ "you can use throughout your project"
#~ msgstr ""

#~ msgid ""
#~ "It is recommended that the production"
#~ " use a set of configurations without"
#~ " configurations.py to change the simple "
#~ "way or the name of the API "
#~ "without the need to create several."
#~ msgstr ""

#~ msgid ""
#~ "In our case, we have the option"
#~ " of \"production\" and \"localhost\", the"
#~ " factory generates the customer according"
#~ " to the name used and the "
#~ "parameters identified in it"
#~ msgstr ""

#~ msgid ""
#~ "Now we are going to list the "
#~ "data using the normal Django template"
#~ " system"
#~ msgstr ""

